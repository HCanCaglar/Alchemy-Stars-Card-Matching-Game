html {
  background-image: url("../public/start-up.jpg");
  background-size: cover; //Scales the image to cover the entire container, cropping if necessary

  background-repeat: no-repeat; //Prevents tiling
  background-position: center;
  min-height: 100vh; //Makes sure the container takes at least full viewport height
}
.leaderboard-table {
  font-size: 2rem;
  border-spacing: 30px;
  text-align: center;
  table-layout: auto; /* don't restrict widths */
  width: 100%;
}
.leader-table-head {
  text-decoration: underline;
}
td,
th {
  white-space: normal; /* allow line breaks */
  word-wrap: break-word; /* break long words */
  word-break: break-word; /* force break if needed */
  max-width: 200px; /* optional, controls how soon it wraps */
}

.game-over-message-div {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}
.game-over-message {
  background-color: #fff;
  color: #000;
  padding: 30px 60px;
  border-radius: 12px;
  font-size: 2rem;
  font-weight: bold;
  text-align: center;
  color: #1c91a1;
}
.countdown {
  text-align: center;
  background-color: rgba(0, 0, 0, 0.3);
  border: 2px solid rgba(255, 255, 255, 0.7);
  border-radius: 10px;
  padding: 20px;
  color: white;
  min-width: 38px;
  margin: 30px auto;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) scale(8);
}
.game-over {
  display: flex;
  align-items: center;
  flex-direction: column;
  background-color: rgba(0, 0, 0, 0.3);
  border: 2px solid rgba(255, 255, 255, 0.7);
  border-radius: 10px;
  padding: 20px;
  color: white;
  max-width: 800px;
  margin: 30px auto;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  overflow-x: auto;
}
.welcome-screen {
  display: flex;
  align-items: center;
  flex-direction: column;
  background-color: rgba(0, 0, 0, 0.3);
  border: 2px solid rgba(255, 255, 255, 0.7);
  border-radius: 10px;
  padding: 20px;
  color: white;
  max-width: 800px;
  margin: 30px auto;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  .welcome-label {
    font-size: 2rem;
  }
  .welcome-input {
    width: 230px;
    font-size: 25px;
  }
  .welcome-form {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-bottom: 30px;
  }
}
.button {
  display: block;
  margin: 0 auto;
  border: 1px solid black !important;
  border-radius: 10px !important;
  transform: scale(1.6);
  margin-bottom: 20px;
  background-color: #1c91a1;
}
.button:hover {
  cursor: pointer;
  background-color: #0fa2b5;
}
.game-page {
  display: grid;
  grid-template-columns: 6fr 1fr;
  grid-gap: 20px;
  position: relative;
}
.time-left {
  position: absolute;
  left: 1380px;
  top: 40px;
  background-color: rgba(0, 0, 0, 0.3);
  border: 2px solid rgba(255, 255, 255, 0.7);
  border-radius: 10px;
  padding: 20px;
  color: white;
  max-width: 800px;
  margin: 30px auto;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  max-height: 100px;
  min-width: 200px;
  text-align: center;
  padding: 80px;
  font-size: 2.5rem;
  gap: 50px;
}
.cards-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr); /* 4 columns, equal width */
  gap: 10px; /* Space between cards */
  width: 100%; /* Or a fixed width */
  max-width: 900px;
  margin: 0 auto; /* Center the grid */
}
.card {
  width: 100%; /* Take full width of its grid cell */
  padding-bottom: 100%; /* Creates a square aspect ratio (height equal to width) */
  position: relative; /* For absolute positioning of content */
  color: #e2e8f0; /* Text color for face-down cards */
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 10px;
  cursor: pointer;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
  transition: transform 0.3s ease, background-color 0.3s ease,
    box-shadow 0.3s ease;
  font-size: 1.2em;
  font-weight: bold;
  user-select: none; /* Prevent text selection */
  overflow: hidden; /* Hide content that goes outside */
  transform-style: preserve-3d; /* Allows children to be positioned in 3D space */
  perspective: 1000px; /* Defines the 3D viewing perspective */
}
/* Inner container for the flip */
.card-inner {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.card-face {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 10px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
}

/* Front face (face down) */
.card-front {
  background-color: #15c0d6; /* Face-down card color */
  color: #e2e8f0; /* Text color for face-down cards */
  /* No initial transform */
}

/* Back face (face up) */
.card-back {
  background-color: #b0eff7; /* Face-up card color */
  color: #2d3748; /* Dark text for face-up cards */
  transform: rotateY(180deg); /* Initially rotated to be the back face */
}

/* When the parent .card has .card-flipped, rotate the inner container */
.card-flipped .card-inner {
  transform: rotateY(180deg); /* This is the flip */
}

/* When the card is matched, it should disappear */
.card-matched {
  visibility: hidden;
  opacity: 0;
  transition: opacity 0.5s ease, visibility 0s 0.5s;
}
