html {
  background-image: url("../public/start-up.jpg");
  background-size: cover; //Scales the image to cover the entire container, cropping if necessary

  background-repeat: no-repeat; //Prevents tiling
  background-position: center;
  min-height: 100vh; //Makes sure the container takes at least full viewport height
}
.leaderboard-container {
  /* This is now the flex item. It will shrink reliably. */
  width: 100%;
  min-width: 0;
}

/* The rest of the CSS stays the same. The wrapper and table properties are correct */
.leaderboard-wrapper {
  padding: 0;
  width: 100%;
  overflow-x: auto;
}

.leaderboard-table {
  margin: 0 auto;

  white-space: nowrap;
  width: auto;
  font-size: clamp(
    1rem,
    2vw,
    2rem
  ); /* Scales between 1rem and 2rem based on viewport width */
  border-spacing: 0;
  border-collapse: collapse;
  text-align: center;
  table-layout: auto;
}
.leader-table-head {
  text-decoration: underline;
}
td,
th {
  padding: 0 1vw;
  white-space: nowrap;
  max-width: 20%; /* optional, controls how soon it wraps */
  word-wrap: normal; /* This is also correct */
  word-break: normal; /* Correct */
}

.game-over-message-div {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}
.game-over-message {
  background-color: #fff;
  color: #000;
  padding: 30px 60px;
  border-radius: 12px;
  font-size: 2rem;
  font-weight: bold;
  text-align: center;
  color: #1c91a1;
}
.countdown {
  background-color: rgba(0, 0, 0, 0.3);
  border: 2px solid rgba(255, 255, 255, 0.7);
  border-radius: 10px;
  color: white;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  display: flex;
  justify-content: center; /* horizontal text center */
  align-items: center; /* vertical text center */
  height: 30vh; /* box height = 30% of screen height */
  min-width: 250px;
  max-width: 400px;
  width: 30vw; /* responsive width = 80% of screen width */
  margin: auto; /* center div on screen */
  font-size: clamp(2rem, 5vw, 6rem); /* min: 2rem, ideal: 5vw, max: 6rem */
  border-radius: 12px;
  text-align: center; /* ensure text wraps nicely */
  box-sizing: border-box;
  font-size: 6rem;
  overflow-wrap: break-word;
}
.game-over {
  display: flex;
  align-items: center;
  flex-direction: column;
  background-color: rgba(0, 0, 0, 0.3);
  border: 2px solid rgba(255, 255, 255, 0.7);
  border-radius: 10px;
  padding: 1rem;
  color: white;
  max-width: 60%;
  margin: 2rem auto;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
}
.welcome-screen {
  display: flex;
  align-items: center;
  flex-direction: column;
  background-color: rgba(0, 0, 0, 0.3);
  border: 2px solid rgba(255, 255, 255, 0.7);
  border-radius: 10px;
  padding: 1rem;
  color: white;
  max-width: 90%;
  margin: 2rem auto;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  .welcome-label {
    font-size: clamp(1.2rem, 3vw, 2rem);
  }
  .welcome-input {
    width: 60%;
    font-size: clamp(1rem, 2vw, 25px);
  }
  .welcome-form {
    display: flex;
    justify-content: center;
    gap: 1vw;
    margin-bottom: 2vw; /* Use vw for margins too */
  }
  .error-message {
    font-size: 1.2rem;
  }
}
.button {
  display: block;
  margin: 0 auto;
  border: 1px solid black !important;
  border-radius: 10px !important;
  transform: scale(1.6);
  margin-bottom: 20px;
  background-color: #1c91a1;
}
.button:hover {
  cursor: pointer;
  background-color: #0fa2b5;
}
.game-page {
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-rows: 1fr;
  align-items: center;
  gap: 2vw;
  width: 100vw;
  height: 100vh;
  box-sizing: border-box;
  padding: clamp(0.5rem, 2vw, 3rem);
}

@media (max-width: 900px) {
  /* Adjust this breakpoint as needed */
  .game-page {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto; /* Stacks the content vertically */
    gap: 1rem;
    padding: 0.5rem;
    height: auto; /* Allow the page to adjust height based on content */
  }
}

.cards-div {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  width: min(90vw, 90vh);
  aspect-ratio: 1 / 1; /* always a square grid */
  box-sizing: border-box;
  box-sizing: border-box;
  padding: 1rem;
}
.time-left {
  background-color: rgba(0, 0, 0, 0.3);
  border: 2px solid rgba(255, 255, 255, 0.7);
  border-radius: 10px;
  color: white;
  max-width: 800px;
  margin: 10px auto;
  box-shadow: 0 0 15px rgba(138, 67, 67, 0.3);
  max-height: 100px;
  min-width: 200px;
  text-align: center;
  padding: 2vh 1vw;
  font-size: clamp(
    1.5rem,
    4vw,
    2.5rem
  ); /* Use a clamp to scale the font size */
  gap: 50px;
  max-width: 90%;
}
.youtube-player {
  width: 100%;
  aspect-ratio: 16 / 9; /* Maintains a 16:9 aspect ratio */
  max-width: 30vw;
  border-radius: "12px";
  box-shadow: "0 4px 12px rgba(0,0,0,0.2)";
}

@media (max-width: 900px) {
  .youtube-player {
    max-width: 90%; /* Adjusts the max width for mobile */
    margin: 0 auto;
  }
}
.time-video {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%; /* Make height relative to parent */
  padding: 1rem; /* Use a smaller, flexible padding */
  box-sizing: border-box;
  max-width: 100%;
  justify-content: center;
  gap: 2vw; /* Or a flexible gap like 2vw */
}

/* Also, add this for the breakpoint transition */
@media (max-width: 900px) {
  .time-video {
    height: auto; /* Allow it to collapse when stacking */
  }
}

.cards-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr); /* 4 columns, equal width */
  gap: 10px; /* Space between cards */
  width: 100%; /* Or a fixed width */
  margin: 0 auto; /* Center the grid */
  width: 100%;
  height: 100%;
  gap: 1.5%;
  flex-grow: 1;
  box-sizing: border-box;
}
.card {
  width: 100%; /* Take full width of its grid cell */
  color: #e2e8f0; /* Text color for face-down cards */
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 10px;
  cursor: pointer;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
  transition: transform 0.3s ease, background-color 0.3s ease,
    box-shadow 0.3s ease;
  font-size: 1.2em;
  font-weight: bold;
  user-select: none; /* Prevent text selection */
  transform-style: preserve-3d; /* Allows children to be positioned in 3D space */
  perspective: 1000px; /* Defines the 3D viewing perspective */
}
/* Inner container for the flip */
.card-inner {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.card-face {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 10px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
}

/* Front face (face down) */
.card-front {
  background-color: #15c0d6; /* Face-down card color */
  color: #e2e8f0; /* Text color for face-down cards */

  /* No initial transform */
}

/* Back face (face up) */
.card-back {
  background-color: #b0eff7; /* Face-up card color */
  color: #2d3748; /* Dark text for face-up cards */
  transform: rotateY(180deg); /* Initially rotated to be the back face */
  white-space: normal;
  word-wrap: break-word; /* legacy property, but good for support */
  word-break: break-word; /* modern, better name for the same thing */
}

/* When the parent .card has .card-flipped, rotate the inner container */
.card-flipped .card-inner {
  transform: rotateY(180deg); /* This is the flip */
}

/* When the card is matched, it should disappear */
.card-matched {
  visibility: hidden;
  opacity: 0;
  transition: opacity 0.5s ease, visibility 0s 0.5s;
}
